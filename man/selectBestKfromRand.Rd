% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/selectBestKfromRand.R
\name{selectBestKfromRand}
\alias{selectBestKfromRand}
\title{Select Optimal Number of Clusters Based on Rand Index Stability}
\usage{
selectBestKfromRand(rand_matrix)
}
\arguments{
\item{rand_matrix}{An object of class \code{ccccRandMatrix}, returned by \code{computeRandMatrix()}.}
}
\value{
A list with:
\describe{
\item{best_k}{The number of clusters with the highest average ARI.}
\item{ari_stats}{A tibble with mean ARI values computed for each \code{k}.}
}
}
\description{
This function identifies the most stable number of clusters (\code{k}) by computing the
mean Adjusted Rand Index (ARI) across all clustering partitions associated with each \code{k}.
The configuration with the highest average ARI is selected as the most stable solution.
}
\details{
Optionally, a bar chart is displayed to visualize the mean ARI values for each \code{k}.
}
\examples{
\dontrun{
tdm <- system.file("extdata", "tdm.csv", package = "cccc")
corpus <- system.file("extdata", "corpus.csv", package = "cccc")
data <- importData(tdm_file = tdm, corpus_file = corpus,
sep_tdm = ";",sep_corpus_info = ";",zone="stat")

data_nchi <- normalization(data, normty = "nchi", sc = 1000)
g <- runClusteringRange(data_nchi,
k_range = 2:26,
n_repeats = 20,
seed = 123,
dist_method = "euclidean",
verbose = TRUE)

g2 <- buildCIVf(clustering_set=g,
criteria_set = NULL,
min_valid_values = 0.75,
verbose = TRUE)

g3 <- selectBestPartitions(g2, g, graph=T)
rand_result <- computeRandMatrix(g3)

best_k <- selectBestKfromRand(rand_result)
}

}
