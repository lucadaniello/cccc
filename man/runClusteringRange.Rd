% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runClusteringRange.R
\name{runClusteringRange}
\alias{runClusteringRange}
\title{Perform Repeated K-Means Clustering Across a Range of Cluster Numbers}
\usage{
runClusteringRange(
  data,
  k_range = 2:26,
  n_repeats = 20,
  seed = 123,
  dist_method = "euclidean",
  verbose = TRUE
)
}
\arguments{
\item{data}{A list object produced by \code{importData()}, containing at least the elements \code{tdm} (term-document matrix) and \code{year_cols} (column indices of time points).}

\item{k_range}{Integer vector specifying the number of clusters to evaluate (default: 2:26).}

\item{n_repeats}{Integer. Number of k-means repetitions per value of \code{k} (default: 20).}

\item{seed}{Integer. Random seed for reproducibility (default: 123).}

\item{dist_method}{Character. Currently unused, included for future compatibility (default: "euclidean").}

\item{verbose}{Logical. If TRUE, displays progress messages for each clustering iteration (default: TRUE).}
}
\value{
An object of class \code{"ccccClusteringSet"} containing:
\describe{
\item{clusters}{A list of lists, where each sublist contains \code{n_repeats} clustering results for a given \code{k}.}
\item{matrix}{The numeric matrix used for clustering (rows = terms, columns = years).}
\item{k_range}{The vector of evaluated cluster numbers.}
\item{n_repeats}{Number of repetitions per cluster number.}
\item{dist_method}{Distance method (for potential future use).}
\item{keywords}{Character vector of row names (terms) from the TDM.}
\item{tdm_info}{Data frame with metadata about the terms (e.g., frequency and zone).}
}
}
\description{
This function applies k-means clustering multiple times to the temporal profiles
(typically rows of a term-document matrix) over a specified range of cluster numbers.
It is designed to evaluate clustering stability and prepare results for subsequent
internal validation and comparison.
}
\examples{
\dontrun{
tdm <- system.file("extdata", "tdm.csv", package = "cccc")
corpus <- system.file("extdata", "corpus.csv", package = "cccc")
data <- importData(tdm_file = tdm, corpus_file = corpus,
sep_tdm = ";",sep_corpus_info = ";",zone="stat")

data_nchi <- normalization(data, normty = "nchi", sc = 1000)
runClusteringRange(data_nchi,
k_range = 2:26,
n_repeats = 20,
seed = 123,
dist_method = "euclidean",
verbose = TRUE)
}

}
