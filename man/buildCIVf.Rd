% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/buildCIVf.R
\name{buildCIVf}
\alias{buildCIVf}
\title{Compute and Rank Clustering Internal Validation Criteria (CIVf)}
\usage{
buildCIVf(
  clustering_set,
  criteria_set = NULL,
  min_valid_values = 0.75,
  verbose = TRUE
)
}
\arguments{
\item{clustering_set}{An object of class \code{ccccClusteringSet}, as produced by \code{runClusteringRange()}.}

\item{criteria_set}{Optional character vector specifying which internal validation criteria to compute.
If \code{NULL} (default), all supported criteria defined in \code{get_opt_civ()} are used.}

\item{min_valid_values}{Proportion of non-missing values required per criterion (default: 0.75).
Criteria with fewer valid values will be excluded from analysis.}

\item{verbose}{Logical. If \code{TRUE}, progress messages are printed (default: \code{TRUE}).}
}
\value{
A list with the following elements:
\describe{
\item{CIV}{Matrix of raw internal validation criterion values (rows = k, columns = criteria).}
\item{CIVtr}{Transformed values, based on optimization rules.}
\item{CIVstd}{Standardized values in the 0-1 range.}
\item{CIVf}{Final ranking matrix (higher rank = better).}
\item{opt_civ}{Named vector indicating the optimization rule for each retained criterion.}
}
}
\description{
This function evaluates a wide set of internal validation indices across multiple
clustering solutions (for different numbers of clusters), transforms and standardizes
them based on their optimization rules, and computes rankings to support the selection
of the optimal number of clusters.
}
\examples{
\dontrun{
tdm <- system.file("extdata", "tdm.csv", package = "cccc")
corpus <- system.file("extdata", "corpus.csv", package = "cccc")
data <- importData(tdm_file = tdm, corpus_file = corpus,
sep_tdm = ";",sep_corpus_info = ";",zone="stat")

data_nchi <- normalization(data, normty = "nchi", sc = 1000)
g <- runClusteringRange(data_nchi,
k_range = 2:26,
n_repeats = 20,
seed = 123,
dist_method = "euclidean",
verbose = TRUE)

g2 <- buildCIVf(clustering_set=g,
criteria_set = NULL,
min_valid_values = 0.75,
verbose = TRUE)
}
}
