% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotAllClusterTrajectories.R
\name{plotAllClusterTrajectories}
\alias{plotAllClusterTrajectories}
\title{Plot All Cluster Trajectories with Colored Legend}
\usage{
plotAllClusterTrajectories(fd_obj, partition_id = NULL, nx = 100)
}
\arguments{
\item{fd_obj}{A functional data object returned by \code{computeClusterFd()}.}

\item{partition_id}{Integer (optional). The ID of the selected partition to display in the title.}

\item{nx}{Integer. Number of interpolation points used for smoothing (default = 100).}
}
\value{
A patchwork \code{ggplot} object combining the cluster trajectories and bottom legend.
}
\description{
This function generates a combined visualization of all smoothed keyword trajectories
grouped by cluster, along with a bottom legend showing the number and percentage of
terms in each cluster. Each cluster is represented with a distinct color and a letter
identifier (A, B, C, ...).
}
\examples{
\dontrun{
tdm <- system.file("extdata", "tdm.csv", package = "cccc")
corpus <- system.file("extdata", "corpus.csv", package = "cccc")
data <- importData(tdm_file = tdm, corpus_file = corpus,
sep_tdm = ";",sep_corpus_info = ";",zone="stat")

data_nchi <- normalization(data, normty = "nchi", sc = 1000)
g <- runClusteringRange(data_nchi,
k_range = 2:26,
n_repeats = 20,
seed = 123,
dist_method = "euclidean",
verbose = TRUE)

results_m2 <- smoothingSelection(data_nchi,
penalty_type = "m-2", plot = FALSE)
results_2  <- smoothingSelection(data_nchi,
penalty_type = "2", plot = FALSE)
results_1  <- smoothingSelection(data_nchi,
penalty_type = "1", plot = FALSE)
results_0  <- smoothingSelection(data_nchi,
penalty_type = "0", plot = FALSE)

Compare and select best smoothing strategy
opt_res <- optimalSmoothing(list("m-2" = results_m2,
"2" = results_2,
"1" = results_1, "0" = results_0))

g2 <- buildCIVf(clustering_set=g,
criteria_set = NULL,
min_valid_values = 0.75,
verbose = TRUE)

g3 <- selectBestPartitions(g2, g, graph=T)
rand_result <- computeRandMatrix(g3)

best_k <- selectBestKfromRand(rand_result)

final_part <- extractBestPartition(g3, best_k$best_k,
rand_matrix=rand_result)

#' Compute Smoothed Cluster Trajectories and Summary Information
fd_obj <- computeClusterFd(data = data_nchi, final_part = final_part,
opt = opt_res)

Plot Cluster Trajectories
plots2 <- plotAllClusterTrajectories(fd_obj,
partition_id = NULL,
nx = 100)
}


}
