% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotClusterCurvesList.R
\name{plotClusterCurvesList}
\alias{plotClusterCurvesList}
\title{Plot Smoothed Keyword Trajectories by Cluster}
\usage{
plotClusterCurvesList(fd_obj, nx = 100)
}
\arguments{
\item{fd_obj}{A list object returned by \code{computeClusterFd()}, containing the \code{fd} object and attributes.}

\item{nx}{Integer. Number of interpolation points along the time axis (default = 100).}
}
\value{
A named list of \code{ggplot} objects, one for each cluster.
}
\description{
This function visualizes smoothed frequency trajectories for each cluster
over time, based on a functional data object produced by \code{computeClusterFd()}.
For each cluster, the plot includes:Transparent lines for each keyword's
smoothed frequency curve, and a bold line representing
the Rand-index-weighted mean trajectory.
}
\examples{
\dontrun{
tdm <- system.file("extdata", "tdm.csv", package = "cccc")
corpus <- system.file("extdata", "corpus.csv", package = "cccc")
data <- importData(tdm_file = tdm, corpus_file = corpus,
sep_tdm = ";",sep_corpus_info = ";",zone="stat")

data_nchi <- normalization(data, normty = "nchi", sc = 1000)
g <- runClusteringRange(data_nchi,
k_range = 2:26,
n_repeats = 20,
seed = 123,
dist_method = "euclidean",
verbose = TRUE)

results_m2 <- smoothingSelection(data_nchi,
penalty_type = "m-2", plot = FALSE)
results_2  <- smoothingSelection(data_nchi,
penalty_type = "2", plot = FALSE)
results_1  <- smoothingSelection(data_nchi,
penalty_type = "1", plot = FALSE)
results_0  <- smoothingSelection(data_nchi,
penalty_type = "0", plot = FALSE)

Compare and select best smoothing strategy
opt_res <- optimalSmoothing(list("m-2" = results_m2,
"2" = results_2,
"1" = results_1, "0" = results_0))

g2 <- buildCIVf(clustering_set=g,
criteria_set = NULL,
min_valid_values = 0.75,
verbose = TRUE)

g3 <- selectBestPartitions(g2, g, graph=T)
rand_result <- computeRandMatrix(g3)

best_k <- selectBestKfromRand(rand_result)

final_part <- extractBestPartition(g3, best_k$best_k,
rand_matrix=rand_result)

#' Compute Smoothed Cluster Trajectories and Summary Information
fd_obj <- computeClusterFd(data = data_nchi, final_part = final_part,
opt = opt_res)

Plot Cluster Curves from Functional Data Object
plots <- plotClusterCurvesList(fd_obj,
nx = 100)
}

}
